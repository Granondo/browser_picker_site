---
import Layout from '../layouts/Layout.astro';
import '../styles/home.css';
import { db, heartClicks } from 'astro:db';

// Get initial clicks count
const clickRecord = await db.select().from(heartClicks).limit(1);
// const initialClicks = clickRecord.length > 0 ? clickRecord[0].totalClicks : 0;
---

<Layout title="Browsea - Choose Your Browser">
  <main>
    <div class="hero">
      <div class="hero-content">
        <div class="logo-container">
          <div class="logo">B</div>
          <div class="logo-bg"></div>
        </div>
        <h1>Browsea</h1>
        <p class="tagline">Choose Your Browser, Every Time</p>
        <p class="description">A lightweight Windows utility that lets you decide which browser opens your links. Take control of your browsing experience.</p>

        <div class="cta-buttons">
          <a href="https://github.com/yourusername/browser-picker/releases/latest" class="button primary">
            <span class="button-content">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
              Download Latest Release
            </span>
          </a>
          <a href="https://github.com/yourusername/browser-picker" class="button secondary">
            <span class="button-content">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>
              View on GitHub
            </span>
          </a>
        </div>
      </div>

      <div class="browser-icons">
        <div class="browser-icon">üåê</div>
        <div class="browser-icon">ü¶ä</div>
        <div class="browser-icon">üß≠</div>
        <div class="browser-icon">üåç</div>
      </div>
    </div>

    <section class="features">
      <div class="title-container">
        <h2>Why Browsea?</h2>
        <div class="heart-section">
          <button class="heart-button">
            <svg class="heart" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
            </svg>
            <span class="heart-counter">{clickRecord[0].totalClicks}</span>
          </button>
        </div>
        </div>
      </div>
      <div class="feature-grid">
        <div class="feature">
          <div class="feature-icon">üéØ</div>
          <h3>Smart Selection</h3>
          <p>Choose your preferred browser for each link with a sleek popup interface</p>
        </div>
        <div class="feature">
          <div class="feature-icon">‚ö°</div>
          <h3>Lightning Fast</h3>
          <p>Lightweight and efficient - starts instantly when you need it</p>
        </div>
        <div class="feature">
          <div class="feature-icon">ü™Ñ</div>
          <h3>Easy Setup</h3>
          <p>Simple installation: you don't need to install anything additional.</p>
        </div>
        <div class="feature">
          <div class="feature-icon">üîí</div>
          <h3>Privacy First</h3>
          <p>No data collection, works completely offline for your privacy</p>
        </div>
      </div>
    </section>

    <section class="how-it-works">
      <h2>How Install It</h2>
      <div class="steps">
        <div class="step">
          <div class="step-number">1</div>
          <h3>Download and Extract</h3>
          <p>Download the zip archive and extract it wherever you want.</p>
        </div>
        <div class="step">
          <div class="step-number">2</div>
          <h3>Install</h3>
          <p>Install it by right-clicking on the install file and selecting "Run as administrator."</p>
        </div>
        <div class="step">
          <div class="step-number">3</div>
          <h3>Make It Default</h3>
          <p>In settings, choose Browsea as your default browser.</p>
        </div>
      </div>
    </section>
  </main>

  <footer>
    <p>Browsea is an open-source project made with ‚ù§Ô∏è for the community</p>
    <div class="footer-links">
      <a href="https://github.com/yourusername/browser-picker/issues">Report Issue</a>
      <span>‚Ä¢</span>
      <a href="https://github.com/yourusername/browser-picker/blob/main/LICENSE">License</a>
    </div>
  </footer>
</Layout>

<script>
  // const heartButton = document.querySelector('.moon-button');
  // const moonCounter = document.querySelector('.moon-counter');
  
  // if (heartButton && moonCounter) {
  //   const hasClicked = localStorage.getItem('moonClicked') === 'true';
  //   const initialClicks = parseInt((heartButton as HTMLButtonElement).dataset.initialClicks || '0', 10);
    
  //   // Update counter display
  //   moonCounter.textContent = initialClicks.toString();
    
  //   // If user has already clicked, add 'clicked' class
  //   if (hasClicked) {
  //     heartButton.classList.add('clicked');
  //   }
    
  //   heartButton.addEventListener('click', async () => {
  //     // Only proceed if user hasn't clicked before
  //     if (!hasClicked) {
  //       try {
  //         const response = await fetch('/api/moon-clicks', {
  //           method: 'POST',
  //           headers: {
  //             'Content-Type': 'application/json'
  //           }
  //         });
          
  //         if (response.ok) {
  //           const { clicks } = await response.json();
  //           moonCounter.textContent = clicks.toString();
  //           heartButton.classList.add('clicked');
  //           localStorage.setItem('moonClicked', 'true');
  //         }
  //       } catch (error) {
  //         console.error('Failed to update moon clicks:', error);
  //       }
  //     }
      
  //     // Add animation class
  //     heartButton.classList.add('clicked');
  //     setTimeout(() => heartButton.classList.remove('clicked'), 200);
  //   });
  // }
</script>






