---
---

<button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
    <svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </svg>
    <svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
    </svg>
  </button>
  
  <style>
    .theme-toggle {
      position: fixed;
      top: 1rem;
      right: 1rem;
      background: var(--card-bg);
      border: none;
      padding: 0.5rem;
      border-radius: 50%;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--text-color);
      box-shadow: 0 2px 8px var(--shadow-color);
      z-index: 100;
      transition: all 0.3s ease;
    }
  
    .theme-toggle:hover {
      transform: scale(1.1);
      box-shadow: 0 4px 12px var(--shadow-color-hover);
    }
  
    .sun-icon,
    .moon-icon {
      width: 24px;
      height: 24px;
      transition: transform 0.3s ease;
    }
  
    :global([data-theme="dark"]) .sun-icon {
      display: block;
    }
  
    :global([data-theme="dark"]) .moon-icon {
      display: none;
    }
  
    :global([data-theme="light"]) .sun-icon {
      display: none;
    }
  
    :global([data-theme="light"]) .moon-icon {
      display: block;
    }
  </style>
  
  <script>
    const themeToggle = document.getElementById('theme-toggle');
    
    function setTheme(theme: 'light' | 'dark') {
      document.documentElement.setAttribute('data-theme', theme);
      localStorage.setItem('theme', theme);
    }
  
    const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;
    const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    const currentTheme = savedTheme || systemTheme;
    
    setTheme(currentTheme);
  
    themeToggle?.addEventListener('click', () => {
      const currentTheme = document.documentElement.getAttribute('data-theme');
      const newTheme = currentTheme === 'light' ? 'dark' : 'light';
      setTheme(newTheme);
    });
  
    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        setTheme(e.matches ? 'dark' : 'light');
      }
    });
  </script>